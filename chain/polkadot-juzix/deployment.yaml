apiVersion: apps/v1
kind: Deployment
metadata:
  name: YOUR_NODE_NAME
spec:
  replicas: 1
  selector:
    matchLabels:
      app: YOUR_NODE_NAME
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: YOUR_NODE_NAME
        type: full
    spec:
      containers:
      - name: polkdot-phala-node
        image: "phalanetwork/phala-poc3-node"
        imagePullPolicy: Always
        env:
          - name: NODE_NAME
            value: YOUR_NODE_NAME
          # - name: EXTRA_OPTS
          #   value: "--rpc-methods Unsafe"
        command:
          - ./phala-node
          - --chain=phala
          - --base-path
          - /root/data
          - --database=paritydb
          - --name
          - $(NODE_NAME)
          - --pruning=archive
          - --rpc-port=9933
          - --ws-port=9944
          - --prometheus-external
        ports:
        - name: p2p-port
          containerPort: 9933
        - name: rpc-port
          containerPort: 9944
        - name: mon-port
          containerPort: 9615
        volumeMounts:
        - mountPath: /root/data/
          name: data
      - name: polkdot-rpc
        image: "gcr.io/g-hash-community/polkadot-rpc-client:v0.1"
        imagePullPolicy: Always
        env:
          - name: ENDPOINT
            value: ws://localhost:9944
        command: [ "/bin/sh", "-c", "--" ]
        args: [ "/usr/local/bin/node /workspace/getInfo.js; while true; do sleep 10; done" ]
      # - name: substrate-api-sidecar
      #   image: "docker.io/parity/substrate-api-sidecar:latest"
      #   ports:
      #   - name: rest-api-port
      #     containerPort: 8080
      - name: polkdot-agent
        image: "gcr.io/local-alignment-284902/polkdot-agent:v1"
        ports:
        - name: polkdot-agent-port
          containerPort: 8080
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: YOUR_NODE_NAME-claim
